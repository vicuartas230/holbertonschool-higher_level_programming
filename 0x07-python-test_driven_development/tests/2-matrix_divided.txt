The matrix_divided module
======================

Using matrix_divided
-------------------

This is an example text file in reStructuredText format.  First import
matrix_divided from the 2-matrix_divided module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check for requeriments

    Test if file has shebang
        >>> import os
        >>> os.popen("head -1 2-matrix_divided.py").read()
        '#!/usr/bin/python3\n'
    
    Test if the file has PEP8 style
        >>> import os
        >>> os.popen("pep8 2-matrix_divided.py").read()
        ''

    Test documentation in the file
        >>> doc = __import__("2-matrix_divided").__doc__
        >>> len(doc) > 0
        True

    Test documentation in function
        >>> fun = __import__("2-matrix_divided").matrix_divided.__doc__
        >>> len(fun) > 0
        True

Now use it:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided(matrix, 'h')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix = [[1, 'h', 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
